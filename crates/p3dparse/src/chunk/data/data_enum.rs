use crate::chunk::data::kinds::{
    animation::{Animation, AnimationGroup, AnimationGroupList, AnimationSize},
    channel::{Channel, ChannelInterpolation},
    collision::{
        CollisionBoundingBox, CollisionCylinder, CollisionObject, CollisionObjectAttribute,
        CollisionOblongBox, CollisionSphere, CollisionVector, CollisionVolume,
        CollisionVolumeOwner, IntersectDSG, TerrainTypeList,
    },
    explosion::BreakableObject,
    export::{P3DExportInfoNamedInt, P3DExportInfoNamedString},
    gameattr::{GameAttr, GameAttrParam},
    image::{Image, ImageRaw},
    locator::{WBLocator, WBMatrix, WBRail, WBSpline, WBTriggerVolume},
    mesh::{
        BinormalList, ColourList, CompositeDrawable, CompositeDrawableEffect,
        CompositeDrawableEffectList, CompositeDrawableProp, CompositeDrawablePropList,
        CompositeDrawableSkin, CompositeDrawableSkinList, CompositeDrawableSortOrder, IndexList,
        MatrixList, MatrixPalette, Mesh, NormalList, OldPrimGroup, PackedNormalList, PositionList,
        RenderStatus, Skin, TangentList, UVList, WeightList,
    },
    name::Name,
    object::{
        AnimatedObject, AnimatedObjectAnimation, AnimatedObjectDSGWrapper, AnimatedObjectFactory,
        MultiController, MultiControllerTracks, ObjectDSG, OldFrameController,
    },
    old_billboard::{
        OldBillboardDisplayInfo, OldBillboardPerspectiveInfo, OldBillboardQuad,
        OldBillboardQuadGroup,
    },
    old_particle_system::{
        OldBaseEmitter, OldParticleSystem, OldParticleSystemFactory,
        OldParticleSystemInstancingInfo, OldSpriteEmitter,
    },
    physics::{
        BoundingBox, BoundingSphere, PhysicsInertiaMatrix, PhysicsJoint, PhysicsObject,
        PhysicsVector,
    },
    prop_state::{
        ObjectAttributes, StatePropCallbackData, StatePropDataV1, StatePropEventData,
        StatePropFrameControllerData, StatePropStateDataV1, StatePropVisibilitiesData,
    },
    pure3d_other::P3DCamera,
    scenegraph::{
        ScenegraphAttachment, ScenegraphAttachmentPoint, ScenegraphBranch, ScenegraphCamera,
        ScenegraphDrawable, ScenegraphLightGroup, ScenegraphSortOrder, ScenegraphTransform,
        ScenegraphVisibility,
    },
    shader::{Shader, VertexShader},
    shader_param::ShaderParam,
    skeleton::{Skeleton, SkeletonJoint, SkeletonJointBonePreserve, SkeletonJointMirrorMap},
    texture::Texture,
    version::Version,
};
use serde::{Deserialize, Serialize};

#[derive(Clone, PartialEq, Debug, Deserialize, Serialize)]
#[allow(dead_code)]
pub enum ChunkData {
    None,
    // -- Rendering -- //
    Texture(Name, Version, Texture),
    Image(Name, Version, Image),
    ImageRaw(ImageRaw),
    Shader(Name, Version, Shader),
    ShaderParam(ShaderParam),
    VertexShader(VertexShader),
    // -- Old Particle System -- //
    OldParticleSystemFactory(Version, Name, OldParticleSystemFactory),
    OldParticleInstancingInfo(Version, OldParticleSystemInstancingInfo),
    OldParticleAnimation(Version),
    OldEmitterAnimation(Version),
    OldGeneratorAnimation(Version),
    OldSpriteEmitter(Version, Name, OldSpriteEmitter),
    OldBaseEmitter(Version, Name, OldBaseEmitter),
    OldParticleSystem(Version, Name, OldParticleSystem),
    // -- Animations -- //
    Animation(Version, Name, Animation),
    AnimationSize(Version, AnimationSize),
    AnimationGroup(Version, Name, AnimationGroup),
    AnimationGroupList(Version, AnimationGroupList),
    Channel(Version, Channel),
    ChannelInterpolation(Version, ChannelInterpolation),
    // -- Old Billboards -- //
    OldBillboardQuad(Version, Name, OldBillboardQuad),
    OldBillboardQuadGroup(Version, Name, OldBillboardQuadGroup),
    OldBillboardDisplayInfo(Version, OldBillboardDisplayInfo),
    OldBillboardPerspectiveInfo(Version, OldBillboardPerspectiveInfo),
    // -- Breakable Objects -- //
    BreakableObject(BreakableObject),
    // -- Skeleton -- //
    Skeleton(Name, Version, Skeleton),
    SkeletonJoint(Name, SkeletonJoint),
    SkeletonJointMirrorMap(SkeletonJointMirrorMap),
    SkeletonJointBonePreserve(SkeletonJointBonePreserve),
    // -- Mesh -- //
    Mesh(Name, Version, Mesh),
    Skin(Name, Version, Skin),
    OldPrimGroup(Version, OldPrimGroup),
    PositionList(PositionList),
    NormalList(NormalList),
    TangentList(TangentList),
    BinormalList(BinormalList),
    PackedNormalList(PackedNormalList),
    UVList(UVList),
    ColourList(ColourList),
    IndexList(IndexList),
    MatrixList(MatrixList),
    MatrixPalette(MatrixPalette),
    WeightList(WeightList),
    RenderStatus(RenderStatus),
    CompositeDrawable(Name, CompositeDrawable),
    CompositeDrawableEffect(Name, CompositeDrawableEffect),
    CompositeDrawableEffectList(CompositeDrawableEffectList),
    CompositeDrawableProp(Name, CompositeDrawableProp),
    CompositeDrawablePropList(CompositeDrawablePropList),
    CompositeDrawableSkin(Name, CompositeDrawableSkin),
    CompositeDrawableSkinList(CompositeDrawableSkinList),
    CompositeDrawableSortOrder(CompositeDrawableSortOrder),
    AnimatedObjectFactory(Version, Name, AnimatedObjectFactory),
    AnimatedObject(Version, Name, AnimatedObject),
    AnimatedObjectAnimation(Version, Name, AnimatedObjectAnimation),
    OldFrameController(Version, Name, OldFrameController),
    MultiController(Name, Version, MultiController),
    MultiControllerTracks(MultiControllerTracks),
    ObjectDSG(Name, Version, ObjectDSG),
    AnimatedObjectDSGWrapper(Name, AnimatedObjectDSGWrapper),
    // -- Physics -- //
    BoundingBox(BoundingBox),
    BoundingSphere(BoundingSphere),
    PhysicsObject(Name, Version, PhysicsObject),
    PhysicsJoint(PhysicsJoint),
    PhysicsVector(PhysicsVector),
    PhysicsInertiaMatrix(PhysicsInertiaMatrix),
    // -- Collision -- //
    CollisionObject(Name, Version, CollisionObject),
    CollisionVolume(CollisionVolume),
    CollisionVolumeOwner(CollisionVolumeOwner),
    CollisionVolumeOwnerName(Name),
    CollisionBoundingBox(CollisionBoundingBox),
    CollisionOblongBox(CollisionOblongBox),
    CollisionCylinder(CollisionCylinder),
    CollisionSphere(CollisionSphere),
    CollisionVector(CollisionVector),
    CollisionObjectAttribute(CollisionObjectAttribute),
    IntersectDSG(IntersectDSG),
    TerrainTypeList(Version, TerrainTypeList),
    StaticPhysicsDSG(Name, Version),
    // -- Prop Data -- //
    StatePropDataV1(Version, Name, StatePropDataV1),
    StatePropStateDataV1(Name, StatePropStateDataV1),
    StatePropVisibilitiesData(Name, StatePropVisibilitiesData),
    StatePropFrameControllerData(Name, StatePropFrameControllerData),
    StatePropEventData(Name, StatePropEventData),
    StatePropCallbackData(Name, StatePropCallbackData),
    PropInstanceList(Name),
    ObjectAttributes(ObjectAttributes),
    // -- Scenegraph -- //
    Scenegraph(Name, Version),
    ScenegraphBranch(Name, ScenegraphBranch),
    ScenegraphTransform(Name, ScenegraphTransform),
    ScenegraphVisibility(Name, ScenegraphVisibility),
    ScenegraphAttachment(Name, ScenegraphAttachment),
    ScenegraphAttachmentPoint(ScenegraphAttachmentPoint),
    ScenegraphDrawable(Name, ScenegraphDrawable),
    ScenegraphCamera(Name, ScenegraphCamera),
    ScenegraphLightGroup(Name, ScenegraphLightGroup),
    ScenegraphSortOrder(ScenegraphSortOrder),
    // -- GameAttr -- //
    GameAttr(Name, Version, GameAttr),
    GameAttrParam(GameAttrParam),
    // -- Locator -- //
    WBLocator(Name, WBLocator),
    WBTriggerVolume(Name, WBTriggerVolume),
    WBMatrix(WBMatrix),
    WBSpline(Name, WBSpline),
    WBRail(Name, WBRail),
    // -- Export Info -- //
    P3DExportInfo(Name),
    P3DExportInfoNamedString(Name, P3DExportInfoNamedString),
    P3DExportInfoNamedInt(Name, P3DExportInfoNamedInt),
    // -- P3D Other -- //
    P3DCamera(Name, Version, P3DCamera),
    Unknown,
}
